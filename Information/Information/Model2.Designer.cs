//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Information
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class masterEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new masterEntities object using the connection string found in the 'masterEntities' section of the application configuration file.
        /// </summary>
        public masterEntities() : base("name=masterEntities", "masterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new masterEntities object.
        /// </summary>
        public masterEntities(string connectionString) : base(connectionString, "masterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new masterEntities object.
        /// </summary>
        public masterEntities(EntityConnection connection) : base(connection, "masterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MSreplication_options> MSreplication_options
        {
            get
            {
                if ((_MSreplication_options == null))
                {
                    _MSreplication_options = base.CreateObjectSet<MSreplication_options>("MSreplication_options");
                }
                return _MSreplication_options;
            }
        }
        private ObjectSet<MSreplication_options> _MSreplication_options;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<spt_fallback_db> spt_fallback_db
        {
            get
            {
                if ((_spt_fallback_db == null))
                {
                    _spt_fallback_db = base.CreateObjectSet<spt_fallback_db>("spt_fallback_db");
                }
                return _spt_fallback_db;
            }
        }
        private ObjectSet<spt_fallback_db> _spt_fallback_db;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<spt_fallback_dev> spt_fallback_dev
        {
            get
            {
                if ((_spt_fallback_dev == null))
                {
                    _spt_fallback_dev = base.CreateObjectSet<spt_fallback_dev>("spt_fallback_dev");
                }
                return _spt_fallback_dev;
            }
        }
        private ObjectSet<spt_fallback_dev> _spt_fallback_dev;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<spt_fallback_usg> spt_fallback_usg
        {
            get
            {
                if ((_spt_fallback_usg == null))
                {
                    _spt_fallback_usg = base.CreateObjectSet<spt_fallback_usg>("spt_fallback_usg");
                }
                return _spt_fallback_usg;
            }
        }
        private ObjectSet<spt_fallback_usg> _spt_fallback_usg;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<spt_monitor> spt_monitor
        {
            get
            {
                if ((_spt_monitor == null))
                {
                    _spt_monitor = base.CreateObjectSet<spt_monitor>("spt_monitor");
                }
                return _spt_monitor;
            }
        }
        private ObjectSet<spt_monitor> _spt_monitor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<spt_values> spt_values
        {
            get
            {
                if ((_spt_values == null))
                {
                    _spt_values = base.CreateObjectSet<spt_values>("spt_values");
                }
                return _spt_values;
            }
        }
        private ObjectSet<spt_values> _spt_values;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MSreplication_options EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMSreplication_options(MSreplication_options mSreplication_options)
        {
            base.AddObject("MSreplication_options", mSreplication_options);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the spt_fallback_db EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTospt_fallback_db(spt_fallback_db spt_fallback_db)
        {
            base.AddObject("spt_fallback_db", spt_fallback_db);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the spt_fallback_dev EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTospt_fallback_dev(spt_fallback_dev spt_fallback_dev)
        {
            base.AddObject("spt_fallback_dev", spt_fallback_dev);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the spt_fallback_usg EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTospt_fallback_usg(spt_fallback_usg spt_fallback_usg)
        {
            base.AddObject("spt_fallback_usg", spt_fallback_usg);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the spt_monitor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTospt_monitor(spt_monitor spt_monitor)
        {
            base.AddObject("spt_monitor", spt_monitor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the spt_values EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTospt_values(spt_values spt_values)
        {
            base.AddObject("spt_values", spt_values);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="masterModel", Name="MSreplication_options")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MSreplication_options : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MSreplication_options object.
        /// </summary>
        /// <param name="optname">Initial value of the optname property.</param>
        /// <param name="value">Initial value of the value property.</param>
        /// <param name="major_version">Initial value of the major_version property.</param>
        /// <param name="minor_version">Initial value of the minor_version property.</param>
        /// <param name="revision">Initial value of the revision property.</param>
        /// <param name="install_failures">Initial value of the install_failures property.</param>
        public static MSreplication_options CreateMSreplication_options(global::System.String optname, global::System.Boolean value, global::System.Int32 major_version, global::System.Int32 minor_version, global::System.Int32 revision, global::System.Int32 install_failures)
        {
            MSreplication_options mSreplication_options = new MSreplication_options();
            mSreplication_options.optname = optname;
            mSreplication_options.value = value;
            mSreplication_options.major_version = major_version;
            mSreplication_options.minor_version = minor_version;
            mSreplication_options.revision = revision;
            mSreplication_options.install_failures = install_failures;
            return mSreplication_options;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String optname
        {
            get
            {
                return _optname;
            }
            set
            {
                if (_optname != value)
                {
                    OnoptnameChanging(value);
                    ReportPropertyChanging("optname");
                    _optname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("optname");
                    OnoptnameChanged();
                }
            }
        }
        private global::System.String _optname;
        partial void OnoptnameChanging(global::System.String value);
        partial void OnoptnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean value
        {
            get
            {
                return _value;
            }
            set
            {
                if (_value != value)
                {
                    OnvalueChanging(value);
                    ReportPropertyChanging("value");
                    _value = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("value");
                    OnvalueChanged();
                }
            }
        }
        private global::System.Boolean _value;
        partial void OnvalueChanging(global::System.Boolean value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 major_version
        {
            get
            {
                return _major_version;
            }
            set
            {
                if (_major_version != value)
                {
                    Onmajor_versionChanging(value);
                    ReportPropertyChanging("major_version");
                    _major_version = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("major_version");
                    Onmajor_versionChanged();
                }
            }
        }
        private global::System.Int32 _major_version;
        partial void Onmajor_versionChanging(global::System.Int32 value);
        partial void Onmajor_versionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 minor_version
        {
            get
            {
                return _minor_version;
            }
            set
            {
                if (_minor_version != value)
                {
                    Onminor_versionChanging(value);
                    ReportPropertyChanging("minor_version");
                    _minor_version = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("minor_version");
                    Onminor_versionChanged();
                }
            }
        }
        private global::System.Int32 _minor_version;
        partial void Onminor_versionChanging(global::System.Int32 value);
        partial void Onminor_versionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 revision
        {
            get
            {
                return _revision;
            }
            set
            {
                if (_revision != value)
                {
                    OnrevisionChanging(value);
                    ReportPropertyChanging("revision");
                    _revision = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("revision");
                    OnrevisionChanged();
                }
            }
        }
        private global::System.Int32 _revision;
        partial void OnrevisionChanging(global::System.Int32 value);
        partial void OnrevisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 install_failures
        {
            get
            {
                return _install_failures;
            }
            set
            {
                if (_install_failures != value)
                {
                    Oninstall_failuresChanging(value);
                    ReportPropertyChanging("install_failures");
                    _install_failures = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("install_failures");
                    Oninstall_failuresChanged();
                }
            }
        }
        private global::System.Int32 _install_failures;
        partial void Oninstall_failuresChanging(global::System.Int32 value);
        partial void Oninstall_failuresChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="masterModel", Name="spt_fallback_db")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class spt_fallback_db : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new spt_fallback_db object.
        /// </summary>
        /// <param name="xserver_name">Initial value of the xserver_name property.</param>
        /// <param name="xdttm_ins">Initial value of the xdttm_ins property.</param>
        /// <param name="xdttm_last_ins_upd">Initial value of the xdttm_last_ins_upd property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="dbid">Initial value of the dbid property.</param>
        /// <param name="status">Initial value of the status property.</param>
        /// <param name="version">Initial value of the version property.</param>
        public static spt_fallback_db Createspt_fallback_db(global::System.String xserver_name, global::System.DateTime xdttm_ins, global::System.DateTime xdttm_last_ins_upd, global::System.String name, global::System.Int16 dbid, global::System.Int16 status, global::System.Int16 version)
        {
            spt_fallback_db spt_fallback_db = new spt_fallback_db();
            spt_fallback_db.xserver_name = xserver_name;
            spt_fallback_db.xdttm_ins = xdttm_ins;
            spt_fallback_db.xdttm_last_ins_upd = xdttm_last_ins_upd;
            spt_fallback_db.name = name;
            spt_fallback_db.dbid = dbid;
            spt_fallback_db.status = status;
            spt_fallback_db.version = version;
            return spt_fallback_db;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String xserver_name
        {
            get
            {
                return _xserver_name;
            }
            set
            {
                if (_xserver_name != value)
                {
                    Onxserver_nameChanging(value);
                    ReportPropertyChanging("xserver_name");
                    _xserver_name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("xserver_name");
                    Onxserver_nameChanged();
                }
            }
        }
        private global::System.String _xserver_name;
        partial void Onxserver_nameChanging(global::System.String value);
        partial void Onxserver_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime xdttm_ins
        {
            get
            {
                return _xdttm_ins;
            }
            set
            {
                if (_xdttm_ins != value)
                {
                    Onxdttm_insChanging(value);
                    ReportPropertyChanging("xdttm_ins");
                    _xdttm_ins = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("xdttm_ins");
                    Onxdttm_insChanged();
                }
            }
        }
        private global::System.DateTime _xdttm_ins;
        partial void Onxdttm_insChanging(global::System.DateTime value);
        partial void Onxdttm_insChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime xdttm_last_ins_upd
        {
            get
            {
                return _xdttm_last_ins_upd;
            }
            set
            {
                if (_xdttm_last_ins_upd != value)
                {
                    Onxdttm_last_ins_updChanging(value);
                    ReportPropertyChanging("xdttm_last_ins_upd");
                    _xdttm_last_ins_upd = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("xdttm_last_ins_upd");
                    Onxdttm_last_ins_updChanged();
                }
            }
        }
        private global::System.DateTime _xdttm_last_ins_upd;
        partial void Onxdttm_last_ins_updChanging(global::System.DateTime value);
        partial void Onxdttm_last_ins_updChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> xfallback_dbid
        {
            get
            {
                return _xfallback_dbid;
            }
            set
            {
                Onxfallback_dbidChanging(value);
                ReportPropertyChanging("xfallback_dbid");
                _xfallback_dbid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xfallback_dbid");
                Onxfallback_dbidChanged();
            }
        }
        private Nullable<global::System.Int16> _xfallback_dbid;
        partial void Onxfallback_dbidChanging(Nullable<global::System.Int16> value);
        partial void Onxfallback_dbidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    OnnameChanging(value);
                    ReportPropertyChanging("name");
                    _name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("name");
                    OnnameChanged();
                }
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 dbid
        {
            get
            {
                return _dbid;
            }
            set
            {
                if (_dbid != value)
                {
                    OndbidChanging(value);
                    ReportPropertyChanging("dbid");
                    _dbid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("dbid");
                    OndbidChanged();
                }
            }
        }
        private global::System.Int16 _dbid;
        partial void OndbidChanging(global::System.Int16 value);
        partial void OndbidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 status
        {
            get
            {
                return _status;
            }
            set
            {
                if (_status != value)
                {
                    OnstatusChanging(value);
                    ReportPropertyChanging("status");
                    _status = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("status");
                    OnstatusChanged();
                }
            }
        }
        private global::System.Int16 _status;
        partial void OnstatusChanging(global::System.Int16 value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 version
        {
            get
            {
                return _version;
            }
            set
            {
                if (_version != value)
                {
                    OnversionChanging(value);
                    ReportPropertyChanging("version");
                    _version = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("version");
                    OnversionChanged();
                }
            }
        }
        private global::System.Int16 _version;
        partial void OnversionChanging(global::System.Int16 value);
        partial void OnversionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="masterModel", Name="spt_fallback_dev")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class spt_fallback_dev : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new spt_fallback_dev object.
        /// </summary>
        /// <param name="xserver_name">Initial value of the xserver_name property.</param>
        /// <param name="xdttm_ins">Initial value of the xdttm_ins property.</param>
        /// <param name="xdttm_last_ins_upd">Initial value of the xdttm_last_ins_upd property.</param>
        /// <param name="low">Initial value of the low property.</param>
        /// <param name="high">Initial value of the high property.</param>
        /// <param name="status">Initial value of the status property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="phyname">Initial value of the phyname property.</param>
        public static spt_fallback_dev Createspt_fallback_dev(global::System.String xserver_name, global::System.DateTime xdttm_ins, global::System.DateTime xdttm_last_ins_upd, global::System.Int32 low, global::System.Int32 high, global::System.Int16 status, global::System.String name, global::System.String phyname)
        {
            spt_fallback_dev spt_fallback_dev = new spt_fallback_dev();
            spt_fallback_dev.xserver_name = xserver_name;
            spt_fallback_dev.xdttm_ins = xdttm_ins;
            spt_fallback_dev.xdttm_last_ins_upd = xdttm_last_ins_upd;
            spt_fallback_dev.low = low;
            spt_fallback_dev.high = high;
            spt_fallback_dev.status = status;
            spt_fallback_dev.name = name;
            spt_fallback_dev.phyname = phyname;
            return spt_fallback_dev;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String xserver_name
        {
            get
            {
                return _xserver_name;
            }
            set
            {
                if (_xserver_name != value)
                {
                    Onxserver_nameChanging(value);
                    ReportPropertyChanging("xserver_name");
                    _xserver_name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("xserver_name");
                    Onxserver_nameChanged();
                }
            }
        }
        private global::System.String _xserver_name;
        partial void Onxserver_nameChanging(global::System.String value);
        partial void Onxserver_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime xdttm_ins
        {
            get
            {
                return _xdttm_ins;
            }
            set
            {
                if (_xdttm_ins != value)
                {
                    Onxdttm_insChanging(value);
                    ReportPropertyChanging("xdttm_ins");
                    _xdttm_ins = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("xdttm_ins");
                    Onxdttm_insChanged();
                }
            }
        }
        private global::System.DateTime _xdttm_ins;
        partial void Onxdttm_insChanging(global::System.DateTime value);
        partial void Onxdttm_insChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime xdttm_last_ins_upd
        {
            get
            {
                return _xdttm_last_ins_upd;
            }
            set
            {
                if (_xdttm_last_ins_upd != value)
                {
                    Onxdttm_last_ins_updChanging(value);
                    ReportPropertyChanging("xdttm_last_ins_upd");
                    _xdttm_last_ins_upd = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("xdttm_last_ins_upd");
                    Onxdttm_last_ins_updChanged();
                }
            }
        }
        private global::System.DateTime _xdttm_last_ins_upd;
        partial void Onxdttm_last_ins_updChanging(global::System.DateTime value);
        partial void Onxdttm_last_ins_updChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> xfallback_low
        {
            get
            {
                return _xfallback_low;
            }
            set
            {
                Onxfallback_lowChanging(value);
                ReportPropertyChanging("xfallback_low");
                _xfallback_low = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xfallback_low");
                Onxfallback_lowChanged();
            }
        }
        private Nullable<global::System.Int32> _xfallback_low;
        partial void Onxfallback_lowChanging(Nullable<global::System.Int32> value);
        partial void Onxfallback_lowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String xfallback_drive
        {
            get
            {
                return _xfallback_drive;
            }
            set
            {
                Onxfallback_driveChanging(value);
                ReportPropertyChanging("xfallback_drive");
                _xfallback_drive = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("xfallback_drive");
                Onxfallback_driveChanged();
            }
        }
        private global::System.String _xfallback_drive;
        partial void Onxfallback_driveChanging(global::System.String value);
        partial void Onxfallback_driveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 low
        {
            get
            {
                return _low;
            }
            set
            {
                if (_low != value)
                {
                    OnlowChanging(value);
                    ReportPropertyChanging("low");
                    _low = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("low");
                    OnlowChanged();
                }
            }
        }
        private global::System.Int32 _low;
        partial void OnlowChanging(global::System.Int32 value);
        partial void OnlowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 high
        {
            get
            {
                return _high;
            }
            set
            {
                if (_high != value)
                {
                    OnhighChanging(value);
                    ReportPropertyChanging("high");
                    _high = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("high");
                    OnhighChanged();
                }
            }
        }
        private global::System.Int32 _high;
        partial void OnhighChanging(global::System.Int32 value);
        partial void OnhighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 status
        {
            get
            {
                return _status;
            }
            set
            {
                if (_status != value)
                {
                    OnstatusChanging(value);
                    ReportPropertyChanging("status");
                    _status = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("status");
                    OnstatusChanged();
                }
            }
        }
        private global::System.Int16 _status;
        partial void OnstatusChanging(global::System.Int16 value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    OnnameChanging(value);
                    ReportPropertyChanging("name");
                    _name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("name");
                    OnnameChanged();
                }
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String phyname
        {
            get
            {
                return _phyname;
            }
            set
            {
                if (_phyname != value)
                {
                    OnphynameChanging(value);
                    ReportPropertyChanging("phyname");
                    _phyname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("phyname");
                    OnphynameChanged();
                }
            }
        }
        private global::System.String _phyname;
        partial void OnphynameChanging(global::System.String value);
        partial void OnphynameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="masterModel", Name="spt_fallback_usg")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class spt_fallback_usg : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new spt_fallback_usg object.
        /// </summary>
        /// <param name="xserver_name">Initial value of the xserver_name property.</param>
        /// <param name="xdttm_ins">Initial value of the xdttm_ins property.</param>
        /// <param name="xdttm_last_ins_upd">Initial value of the xdttm_last_ins_upd property.</param>
        /// <param name="dbid">Initial value of the dbid property.</param>
        /// <param name="segmap">Initial value of the segmap property.</param>
        /// <param name="lstart">Initial value of the lstart property.</param>
        /// <param name="sizepg">Initial value of the sizepg property.</param>
        /// <param name="vstart">Initial value of the vstart property.</param>
        public static spt_fallback_usg Createspt_fallback_usg(global::System.String xserver_name, global::System.DateTime xdttm_ins, global::System.DateTime xdttm_last_ins_upd, global::System.Int16 dbid, global::System.Int32 segmap, global::System.Int32 lstart, global::System.Int32 sizepg, global::System.Int32 vstart)
        {
            spt_fallback_usg spt_fallback_usg = new spt_fallback_usg();
            spt_fallback_usg.xserver_name = xserver_name;
            spt_fallback_usg.xdttm_ins = xdttm_ins;
            spt_fallback_usg.xdttm_last_ins_upd = xdttm_last_ins_upd;
            spt_fallback_usg.dbid = dbid;
            spt_fallback_usg.segmap = segmap;
            spt_fallback_usg.lstart = lstart;
            spt_fallback_usg.sizepg = sizepg;
            spt_fallback_usg.vstart = vstart;
            return spt_fallback_usg;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String xserver_name
        {
            get
            {
                return _xserver_name;
            }
            set
            {
                if (_xserver_name != value)
                {
                    Onxserver_nameChanging(value);
                    ReportPropertyChanging("xserver_name");
                    _xserver_name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("xserver_name");
                    Onxserver_nameChanged();
                }
            }
        }
        private global::System.String _xserver_name;
        partial void Onxserver_nameChanging(global::System.String value);
        partial void Onxserver_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime xdttm_ins
        {
            get
            {
                return _xdttm_ins;
            }
            set
            {
                if (_xdttm_ins != value)
                {
                    Onxdttm_insChanging(value);
                    ReportPropertyChanging("xdttm_ins");
                    _xdttm_ins = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("xdttm_ins");
                    Onxdttm_insChanged();
                }
            }
        }
        private global::System.DateTime _xdttm_ins;
        partial void Onxdttm_insChanging(global::System.DateTime value);
        partial void Onxdttm_insChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime xdttm_last_ins_upd
        {
            get
            {
                return _xdttm_last_ins_upd;
            }
            set
            {
                if (_xdttm_last_ins_upd != value)
                {
                    Onxdttm_last_ins_updChanging(value);
                    ReportPropertyChanging("xdttm_last_ins_upd");
                    _xdttm_last_ins_upd = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("xdttm_last_ins_upd");
                    Onxdttm_last_ins_updChanged();
                }
            }
        }
        private global::System.DateTime _xdttm_last_ins_upd;
        partial void Onxdttm_last_ins_updChanging(global::System.DateTime value);
        partial void Onxdttm_last_ins_updChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> xfallback_vstart
        {
            get
            {
                return _xfallback_vstart;
            }
            set
            {
                Onxfallback_vstartChanging(value);
                ReportPropertyChanging("xfallback_vstart");
                _xfallback_vstart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xfallback_vstart");
                Onxfallback_vstartChanged();
            }
        }
        private Nullable<global::System.Int32> _xfallback_vstart;
        partial void Onxfallback_vstartChanging(Nullable<global::System.Int32> value);
        partial void Onxfallback_vstartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 dbid
        {
            get
            {
                return _dbid;
            }
            set
            {
                if (_dbid != value)
                {
                    OndbidChanging(value);
                    ReportPropertyChanging("dbid");
                    _dbid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("dbid");
                    OndbidChanged();
                }
            }
        }
        private global::System.Int16 _dbid;
        partial void OndbidChanging(global::System.Int16 value);
        partial void OndbidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 segmap
        {
            get
            {
                return _segmap;
            }
            set
            {
                if (_segmap != value)
                {
                    OnsegmapChanging(value);
                    ReportPropertyChanging("segmap");
                    _segmap = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("segmap");
                    OnsegmapChanged();
                }
            }
        }
        private global::System.Int32 _segmap;
        partial void OnsegmapChanging(global::System.Int32 value);
        partial void OnsegmapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 lstart
        {
            get
            {
                return _lstart;
            }
            set
            {
                if (_lstart != value)
                {
                    OnlstartChanging(value);
                    ReportPropertyChanging("lstart");
                    _lstart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("lstart");
                    OnlstartChanged();
                }
            }
        }
        private global::System.Int32 _lstart;
        partial void OnlstartChanging(global::System.Int32 value);
        partial void OnlstartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 sizepg
        {
            get
            {
                return _sizepg;
            }
            set
            {
                if (_sizepg != value)
                {
                    OnsizepgChanging(value);
                    ReportPropertyChanging("sizepg");
                    _sizepg = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("sizepg");
                    OnsizepgChanged();
                }
            }
        }
        private global::System.Int32 _sizepg;
        partial void OnsizepgChanging(global::System.Int32 value);
        partial void OnsizepgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 vstart
        {
            get
            {
                return _vstart;
            }
            set
            {
                if (_vstart != value)
                {
                    OnvstartChanging(value);
                    ReportPropertyChanging("vstart");
                    _vstart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("vstart");
                    OnvstartChanged();
                }
            }
        }
        private global::System.Int32 _vstart;
        partial void OnvstartChanging(global::System.Int32 value);
        partial void OnvstartChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="masterModel", Name="spt_monitor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class spt_monitor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new spt_monitor object.
        /// </summary>
        /// <param name="lastrun">Initial value of the lastrun property.</param>
        /// <param name="cpu_busy">Initial value of the cpu_busy property.</param>
        /// <param name="io_busy">Initial value of the io_busy property.</param>
        /// <param name="idle">Initial value of the idle property.</param>
        /// <param name="pack_received">Initial value of the pack_received property.</param>
        /// <param name="pack_sent">Initial value of the pack_sent property.</param>
        /// <param name="connections">Initial value of the connections property.</param>
        /// <param name="pack_errors">Initial value of the pack_errors property.</param>
        /// <param name="total_read">Initial value of the total_read property.</param>
        /// <param name="total_write">Initial value of the total_write property.</param>
        /// <param name="total_errors">Initial value of the total_errors property.</param>
        public static spt_monitor Createspt_monitor(global::System.DateTime lastrun, global::System.Int32 cpu_busy, global::System.Int32 io_busy, global::System.Int32 idle, global::System.Int32 pack_received, global::System.Int32 pack_sent, global::System.Int32 connections, global::System.Int32 pack_errors, global::System.Int32 total_read, global::System.Int32 total_write, global::System.Int32 total_errors)
        {
            spt_monitor spt_monitor = new spt_monitor();
            spt_monitor.lastrun = lastrun;
            spt_monitor.cpu_busy = cpu_busy;
            spt_monitor.io_busy = io_busy;
            spt_monitor.idle = idle;
            spt_monitor.pack_received = pack_received;
            spt_monitor.pack_sent = pack_sent;
            spt_monitor.connections = connections;
            spt_monitor.pack_errors = pack_errors;
            spt_monitor.total_read = total_read;
            spt_monitor.total_write = total_write;
            spt_monitor.total_errors = total_errors;
            return spt_monitor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime lastrun
        {
            get
            {
                return _lastrun;
            }
            set
            {
                if (_lastrun != value)
                {
                    OnlastrunChanging(value);
                    ReportPropertyChanging("lastrun");
                    _lastrun = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("lastrun");
                    OnlastrunChanged();
                }
            }
        }
        private global::System.DateTime _lastrun;
        partial void OnlastrunChanging(global::System.DateTime value);
        partial void OnlastrunChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cpu_busy
        {
            get
            {
                return _cpu_busy;
            }
            set
            {
                if (_cpu_busy != value)
                {
                    Oncpu_busyChanging(value);
                    ReportPropertyChanging("cpu_busy");
                    _cpu_busy = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cpu_busy");
                    Oncpu_busyChanged();
                }
            }
        }
        private global::System.Int32 _cpu_busy;
        partial void Oncpu_busyChanging(global::System.Int32 value);
        partial void Oncpu_busyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 io_busy
        {
            get
            {
                return _io_busy;
            }
            set
            {
                if (_io_busy != value)
                {
                    Onio_busyChanging(value);
                    ReportPropertyChanging("io_busy");
                    _io_busy = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("io_busy");
                    Onio_busyChanged();
                }
            }
        }
        private global::System.Int32 _io_busy;
        partial void Onio_busyChanging(global::System.Int32 value);
        partial void Onio_busyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idle
        {
            get
            {
                return _idle;
            }
            set
            {
                if (_idle != value)
                {
                    OnidleChanging(value);
                    ReportPropertyChanging("idle");
                    _idle = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idle");
                    OnidleChanged();
                }
            }
        }
        private global::System.Int32 _idle;
        partial void OnidleChanging(global::System.Int32 value);
        partial void OnidleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pack_received
        {
            get
            {
                return _pack_received;
            }
            set
            {
                if (_pack_received != value)
                {
                    Onpack_receivedChanging(value);
                    ReportPropertyChanging("pack_received");
                    _pack_received = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pack_received");
                    Onpack_receivedChanged();
                }
            }
        }
        private global::System.Int32 _pack_received;
        partial void Onpack_receivedChanging(global::System.Int32 value);
        partial void Onpack_receivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pack_sent
        {
            get
            {
                return _pack_sent;
            }
            set
            {
                if (_pack_sent != value)
                {
                    Onpack_sentChanging(value);
                    ReportPropertyChanging("pack_sent");
                    _pack_sent = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pack_sent");
                    Onpack_sentChanged();
                }
            }
        }
        private global::System.Int32 _pack_sent;
        partial void Onpack_sentChanging(global::System.Int32 value);
        partial void Onpack_sentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connections
        {
            get
            {
                return _connections;
            }
            set
            {
                if (_connections != value)
                {
                    OnconnectionsChanging(value);
                    ReportPropertyChanging("connections");
                    _connections = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("connections");
                    OnconnectionsChanged();
                }
            }
        }
        private global::System.Int32 _connections;
        partial void OnconnectionsChanging(global::System.Int32 value);
        partial void OnconnectionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pack_errors
        {
            get
            {
                return _pack_errors;
            }
            set
            {
                if (_pack_errors != value)
                {
                    Onpack_errorsChanging(value);
                    ReportPropertyChanging("pack_errors");
                    _pack_errors = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pack_errors");
                    Onpack_errorsChanged();
                }
            }
        }
        private global::System.Int32 _pack_errors;
        partial void Onpack_errorsChanging(global::System.Int32 value);
        partial void Onpack_errorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 total_read
        {
            get
            {
                return _total_read;
            }
            set
            {
                if (_total_read != value)
                {
                    Ontotal_readChanging(value);
                    ReportPropertyChanging("total_read");
                    _total_read = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("total_read");
                    Ontotal_readChanged();
                }
            }
        }
        private global::System.Int32 _total_read;
        partial void Ontotal_readChanging(global::System.Int32 value);
        partial void Ontotal_readChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 total_write
        {
            get
            {
                return _total_write;
            }
            set
            {
                if (_total_write != value)
                {
                    Ontotal_writeChanging(value);
                    ReportPropertyChanging("total_write");
                    _total_write = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("total_write");
                    Ontotal_writeChanged();
                }
            }
        }
        private global::System.Int32 _total_write;
        partial void Ontotal_writeChanging(global::System.Int32 value);
        partial void Ontotal_writeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 total_errors
        {
            get
            {
                return _total_errors;
            }
            set
            {
                if (_total_errors != value)
                {
                    Ontotal_errorsChanging(value);
                    ReportPropertyChanging("total_errors");
                    _total_errors = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("total_errors");
                    Ontotal_errorsChanged();
                }
            }
        }
        private global::System.Int32 _total_errors;
        partial void Ontotal_errorsChanging(global::System.Int32 value);
        partial void Ontotal_errorsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="masterModel", Name="spt_values")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class spt_values : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new spt_values object.
        /// </summary>
        /// <param name="number">Initial value of the number property.</param>
        /// <param name="type">Initial value of the type property.</param>
        public static spt_values Createspt_values(global::System.Int32 number, global::System.String type)
        {
            spt_values spt_values = new spt_values();
            spt_values.number = number;
            spt_values.type = type;
            return spt_values;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 number
        {
            get
            {
                return _number;
            }
            set
            {
                if (_number != value)
                {
                    OnnumberChanging(value);
                    ReportPropertyChanging("number");
                    _number = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("number");
                    OnnumberChanged();
                }
            }
        }
        private global::System.Int32 _number;
        partial void OnnumberChanging(global::System.Int32 value);
        partial void OnnumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                if (_type != value)
                {
                    OntypeChanging(value);
                    ReportPropertyChanging("type");
                    _type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("type");
                    OntypeChanged();
                }
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> low
        {
            get
            {
                return _low;
            }
            set
            {
                OnlowChanging(value);
                ReportPropertyChanging("low");
                _low = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("low");
                OnlowChanged();
            }
        }
        private Nullable<global::System.Int32> _low;
        partial void OnlowChanging(Nullable<global::System.Int32> value);
        partial void OnlowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> high
        {
            get
            {
                return _high;
            }
            set
            {
                OnhighChanging(value);
                ReportPropertyChanging("high");
                _high = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("high");
                OnhighChanged();
            }
        }
        private Nullable<global::System.Int32> _high;
        partial void OnhighChanging(Nullable<global::System.Int32> value);
        partial void OnhighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private Nullable<global::System.Int32> _status;
        partial void OnstatusChanging(Nullable<global::System.Int32> value);
        partial void OnstatusChanged();

        #endregion

    
    }

    #endregion

    
}
